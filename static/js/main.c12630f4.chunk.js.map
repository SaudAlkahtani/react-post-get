{"version":3,"sources":["logo.svg","Get.js","Post.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Get","props","state","url","this","getFox","axios","get","then","data","setState","image","Row","Col","className","src","style","border","alt","width","height","Button","onClick","color","Component","Post","email","first_name","last_name","gender","status","errorFields","success","id","updateForm","bind","handleSubmit","value","target","name","event","preventDefault","console","log","post","headers","Authorization","res","result","length","map","field","Alert","key","message","href","Form","onSubmit","FormGroup","Label","for","Input","type","placeholder","onChange","Home","Card","CardHeader","CardBody","textAlign","tag","Link","to","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"iKAAAA,EAAOC,QAAU,IAA0B,kC,8MCItBC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,IAAK,IAHU,E,gEAOjBC,KAAKC,W,+BAGG,IAAD,OACPC,IACGC,IAAI,mEACJC,MAAK,SAACC,GACL,EAAKC,SAAS,CACZP,IAAKM,EAAKA,KAAKE,a,+BAIb,IAAD,OACP,OACE,6BACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,iGAGA,8DAGJ,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,UAAU,QACb,yBACEC,IACEX,KAAKF,OACDE,KAAKF,MAAMC,IACTC,KAAKF,MAAMC,IAEb,6EAENa,MAAO,CAAEC,OAAQ,mBACjBC,IAAI,MACJC,MAAM,OACNC,OAAO,WAIb,kBAACR,EAAA,EAAD,CAAKE,UAAU,QACb,kBAACD,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,CAAQC,QAAS,kBAAI,EAAKjB,UAAUkB,MAAM,WAA1C,0B,GAlDqBC,a,wDCWZC,E,kDACnB,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXwB,MAAO,GACPC,WAAY,GACZC,UAAW,GACXC,OAAQ,GACRC,OAAQ,GACRC,YAAa,GACbC,SAAS,EACTC,GAAI,IAEN,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAbH,E,oGAgBRE,GACTjC,KAAKM,SAAL,eACG2B,EAAMC,OAAOC,KAAOF,EAAMC,OAAOD,U,mCAIzBG,GAAQ,IAAD,OAClBA,EAAMC,iBAENC,QAAQC,IAAIvC,KAAKF,OACjBI,IACGsC,KACC,uGACAxC,KAAKF,MACL,CACE2C,QAAS,CACPC,cAAe,iDAIpBtC,MAAK,SAACuC,GACLL,QAAQC,IAAII,GACRA,EAAItC,KAAKuC,OAAOf,IAClB,EAAKvB,SAAS,CACZqB,YAAa,KAEfW,QAAQC,IACN,2FACEI,EAAItC,KAAKuC,OAAOf,GAChB,mEAEJ,EAAKvB,SAAS,CACZsB,SAAS,EACTC,GAAIc,EAAItC,KAAKuC,OAAOf,OAGtBS,QAAQC,IAAII,EAAItC,KAAKuC,QACrB,EAAKtC,SAAS,CACZqB,YAAagB,EAAItC,KAAKuC,e,+BAM9B,OACE,6BACE,kBAACpC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,+EAGJ,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iDAEF,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGT,KAAKF,MAAM6B,aACwB,IAAlC3B,KAAKF,MAAM6B,YAAYkB,QACvB7C,KAAKF,MAAM6B,YAAYmB,KAAI,SAACC,GAC1B,OACE,kBAACC,EAAA,EAAD,CAAOC,IAAKF,EAAMA,MAAO5B,MAAM,WAC5B4B,EAAMG,YAIdlD,KAAKF,MAAM8B,SACV,kBAACoB,EAAA,EAAD,CAAO7B,MAAM,WAAb,sCACqC,uBAAGe,OAAO,SAASiB,KAAM,yCAAyCnD,KAAKF,MAAM+B,GAAG,mEAAhF,QADrC,iBAON,kBAACrB,EAAA,EAAD,CAAKE,UAAU,QACb,kBAACD,EAAA,EAAD,KACE,kBAAC2C,EAAA,EAAD,CAAMC,SAAUrD,KAAKgC,cACnB,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLvB,KAAK,QACLN,GAAG,QACH8B,YAAY,sBACZ1B,MAAOjC,KAAKF,MAAMwB,MAClBsC,SAAU5D,KAAK8B,cAGnB,kBAACwB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,cAAX,cACA,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLvB,KAAK,aACLN,GAAG,aACH8B,YAAY,OACZ1B,MAAOjC,KAAKF,MAAMyB,WAClBqC,SAAU5D,KAAK8B,cAGnB,kBAACwB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,aAAX,aACA,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLvB,KAAK,YACLN,GAAG,YACH8B,YAAY,UACZ1B,MAAOjC,KAAKF,MAAM0B,UAClBoC,SAAU5D,KAAK8B,cAInB,kBAACwB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,gBAAX,iBACA,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLvB,KAAK,SACLN,GAAG,eACHI,MAAOjC,KAAKF,MAAM2B,OAClBmC,SAAU5D,KAAK8B,YAEf,4BAAQG,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,YAGJ,kBAACqB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,gBAAX,sBACA,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLvB,KAAK,SACLN,GAAG,eACHI,MAAOjC,KAAKF,MAAM4B,OAClBkC,SAAU5D,KAAK8B,YAEf,4BAAQG,MAAM,UAAd,UACA,4BAAQA,MAAM,YAAd,cAGJ,kBAAChB,EAAA,EAAD,CAAQE,MAAM,WAAd,kB,GAzJoBC,a,wBCTbyC,E,uKAEjB,OACE,6BACE,kBAAC,IAAD,KACE,6BACE,kBAACrD,EAAA,EAAD,CAAKE,UAAU,oCACb,kBAACD,EAAA,EAAD,CAAKC,UAAU,SACb,kBAACoD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yDAEF,kBAACC,EAAA,EAAD,KACE,kBAACxD,EAAA,EAAD,CAAKI,MAAO,CAAEqD,UAAW,UAAYvD,UAAU,QAC7C,kBAACD,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,CAAQiD,IAAKC,IAAMhD,MAAM,OAAOiD,GAAG,OAAnC,OAGA,kBAACnD,EAAA,EAAD,CACEP,UAAU,QACVwD,IAAKC,IACLC,GAAG,OACHjD,MAAM,WAJR,UAUA,yBAAKT,UAAU,QACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2D,KAAK,QACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,2E,GArCUjD,aCQnBkD,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCGcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/E,MAAK,SAAAgF,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjD,QAAQiD,MAAMA,EAAMrC,c","file":"static/js/main.c12630f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport { Row, Col, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nexport default class Get extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"\",\n    };\n  }\n  componentDidMount() {\n    this.getFox();\n  }\n\n  getFox() {\n    axios\n      .get(\"https://cors-anywhere.herokuapp.com/https://randomfox.ca/floof/\")\n      .then((data) => {\n        this.setState({\n          url: data.data.image,\n        });\n      });\n  }\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col>\n            <h4>\n              This is a simple API which gets a random picture related to Foxes\n            </h4>\n            <h5>The picture will show below:</h5>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"pt-3\">\n            <img\n              src={\n                this.state\n                  ? this.state.url\n                    ? this.state.url\n                    : \"https://www.teknozeka.com/wp-content/uploads/2020/03/wp-header-logo-24.png\"\n                  : \"https://www.teknozeka.com/wp-content/uploads/2020/03/wp-header-logo-24.png\"\n              }\n              style={{ border: \"1px solid black\" }}\n              alt=\"Fox\"\n              width=\"100%\"\n              height=\"100%\"\n            ></img>\n          </Col>\n        </Row>\n        <Row className=\"pt-2\">\n          <Col>\n            <Button onClick={()=>this.getFox()} color=\"primary\">Get A New Image</Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Row,\n  Col,\n  Alert,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      gender: \"\",\n      status: \"\",\n      errorFields: [],\n      success: false,\n      id: \"\",\n    };\n    this.updateForm = this.updateForm.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {}\n  updateForm(value) {\n    this.setState({\n      [value.target.name]: value.target.value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    console.log(this.state);\n    axios\n      .post(\n        \"https://gorest.co.in/public-api/users?_format=json&access-token=H96hUwyyZDu3YJSti0qfYsFf3VNcY0wb-yMI\",\n        this.state,\n        {\n          headers: {\n            Authorization: \"Bearer H96hUwyyZDu3YJSti0qfYsFf3VNcY0wb-yMI\",\n          },\n        }\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.result.id) {\n          this.setState({\n            errorFields: [],\n          });\n          console.log(\n            \"User created successfully!, click here to verify: https://gorest.co.in/public-api/users/\" +\n              res.data.result.id +\n              \"?_format=json&access-token=H96hUwyyZDu3YJSti0qfYsFf3VNcY0wb-yMI\"\n          );\n          this.setState({\n            success: true,\n            id: res.data.result.id,\n          });\n        } else {\n          console.log(res.data.result);\n          this.setState({\n            errorFields: res.data.result,\n          });\n        }\n      });\n  }\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col>\n            <h3>This api will post create a username for you.</h3>\n          </Col>\n        </Row>\n        <Row>\n          <Col>Please Enter the following information:</Col>\n        </Row>\n        <Row>\n          <Col>\n            {this.state.errorFields &&\n              this.state.errorFields.length !== 0 &&\n              this.state.errorFields.map((field) => {\n                return (\n                  <Alert key={field.field} color=\"warning\">\n                    {field.message}\n                  </Alert>\n                );\n              })}\n            {this.state.success && (\n              <Alert color=\"success\">\n                User created successfully!, click  <a target=\"_blank\" href={\"https://gorest.co.in/public-api/users/\"+this.state.id+\"?_format=json&access-token=H96hUwyyZDu3YJSti0qfYsFf3VNcY0wb-yMI\"}>Here</a> to verify!\n               \n              </Alert>\n            )}\n          </Col>\n        </Row>\n        <Row className=\"pt-4\">\n          <Col>\n            <Form onSubmit={this.handleSubmit}>\n              <FormGroup>\n                <Label for=\"Email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"Email\"\n                  placeholder=\"example@example.com\"\n                  value={this.state.email}\n                  onChange={this.updateForm}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"first_name\">First name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"first_name\"\n                  id=\"first_name\"\n                  placeholder=\"Saud\"\n                  value={this.state.first_name}\n                  onChange={this.updateForm}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"last_name\">Last name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"last_name\"\n                  id=\"last_name\"\n                  placeholder=\"Kahtani\"\n                  value={this.state.last_name}\n                  onChange={this.updateForm}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label for=\"selectGender\">Select gender</Label>\n                <Input\n                  type=\"select\"\n                  name=\"gender\"\n                  id=\"selectGender\"\n                  value={this.state.gender}\n                  onChange={this.updateForm}\n                >\n                  <option value=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"selectStatus\">Select user status</Label>\n                <Input\n                  type=\"select\"\n                  name=\"status\"\n                  id=\"selectStatus\"\n                  value={this.state.status}\n                  onChange={this.updateForm}\n                >\n                  <option value=\"active\">Active</option>\n                  <option value=\"inactive\">Inactive</option>\n                </Input>\n              </FormGroup>\n              <Button color=\"primary\">Submit</Button>\n            </Form>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Get from \"./Get\";\nimport Post from \"./Post\";\nimport { Button, Row, Col, Card, CardBody, CardHeader } from \"reactstrap\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <Row className=\"justify-content-center pt-5 mr-0\">\n              <Col className=\"col-5\">\n                <Card>\n                  <CardHeader>\n                    <h2>Welcome to Http API test</h2>\n                  </CardHeader>\n                  <CardBody>\n                    <Row style={{ textAlign: \"center\" }} className=\"pt-5\">\n                      <Col>\n                        <Button tag={Link} color=\"info\" to=\"get\">\n                          Get\n                        </Button>\n                        <Button\n                          className=\"ml-3 \"\n                          tag={Link}\n                          to=\"post\"\n                          color=\"warning\"\n                        >\n                          Post\n                        </Button>\n                      </Col>\n                    </Row>\n                        <div className=\"pt-3\">\n                    <Switch >\n                      <Route path=\"/get\">\n                        <Get />\n                      </Route>\n                      <Route path=\"/post\">\n                        <Post />\n                      </Route>\n                      <Route path=\"/\">\n                        <h3>Please choose method to demo!</h3>\n                      </Route>\n                    </Switch>\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './Home.js';\n\n\nfunction App() {\n  return  (\n    <div>\n      <Home />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}